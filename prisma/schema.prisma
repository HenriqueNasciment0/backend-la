// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id Int @id @default(autoincrement())
  name String
  email String @unique
  password String
  jobId Int?
  admin Boolean @default(false)
  refreshToken Int?
  createdAt DateTime @default(now())
  updateAt DateTime?
  deletedAt DateTime?
  job Job? @relation(fields: [jobId], references: [id])
}

model Job {
  id Int @id @default(autoincrement())
  serviceId Int
  customerId Int?
  locationId Int?
  payment String
  photos String
  customerLink String
  discount Int?
  closingDate DateTime?
  eventDate DateTime?
  gift Boolean?
  createdAt DateTime @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  users User[]
  service Category @relation(fields: [serviceId], references: [id])
  location Location? @relation(fields: [locationId], references: [id])
}

model Category {
  id Int @id @default(autoincrement())
  name String
  price Int
  description String
  workingMinutes Int
  createdAt DateTime @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  job Job[]
}

model Location {
  id Int @id @default(autoincrement())
  name String
  address String
  coordinates String?
  displacementRate Int
  freeSite Boolean
  outOfState Boolean
  outOfCountry Boolean
  createdAt DateTime @default(now())
  updatedAt DateTime?
  deletedAt DateTime?
  job Job[]
}